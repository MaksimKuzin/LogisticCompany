@model LogisticCompany.Models.Tranport

@{
    // Установка заголовка в зависимости от того, является ли модель пустой или нет
    ViewData["Title"] = Model != null && Model.Id != 0 ? "Изменение автомобиля" : "Добавление автомобиля";
}
<h2 class="text-center mb-4">@ViewData["Title"]</h2>

<div class="container">
    <form asp-action="@(Model != null && Model.Id != 0 ? "Edit" : "Create")" method="post" class="needs-validation" novalidate>
        <input type="hidden" asp-for="Id" />

        <div class="row mb-3">
            <label asp-for="TransportNumber" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="TransportNumber" class="form-control" />
                <span asp-validation-for="TransportNumber" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="Brand" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="Brand" class="form-control" />
                <span asp-validation-for="Brand" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="Model" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="Model" type="text" class="form-control" formnovalidate />
                <span asp-validation-for="Model" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="RegistrationDate" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="RegistrationDate" type="datetime" class="form-control" formnovalidate />
                <span asp-validation-for="RegistrationDate" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="Color" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="Color" type="text" class="form-control" />
                <span asp-validation-for="Color" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="Capacity" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="Capacity" type="text" class="form-control" />
                <span asp-validation-for="Capacity" class="text-danger"></span>
            </div>
        </div>


        <div class="row">
            <div class="col-sm-10 offset-sm-2">
                <button type="submit" class="btn btn-primary">Сохранить</button>
                <a asp-action="Index" class="btn btn-secondary ms-2">Отмена</a>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.querySelector("form");

            form.addEventListener("submit", function (event) {
                let isValid = true;

                // Проверка транспортного номера (не менее 8 символов)
                const transportNumber = document.querySelector("input[name='TransportNumber']").value.trim();
                if (transportNumber.length < 8) {
                    isValid = false;
                    alert("Транспортный номер должен содержать не менее 8 символов.");
                }

                // Проверка даты регистрации (не должна быть "0001-01-01")
                const registrationDate = document.querySelector("input[name='RegistrationDate']").value.trim();
                if (registrationDate === "01.01.0001") {
                    isValid = false;
                    alert("Дата регистрации не должна быть 01.01.0001.");
                }

                // Проверка вместимости (должна быть больше 0)
                const capacity = parseFloat(document.querySelector("input[name='Capacity']").value.trim());
                if (isNaN(capacity) || capacity <= 0) {
                    isValid = false;
                    alert("Вместимость должна быть больше 0.");
                }

                if (!isValid) {
                    event.preventDefault(); // Остановка отправки формы, если найдена ошибка
                }
            });
        });
    </script>