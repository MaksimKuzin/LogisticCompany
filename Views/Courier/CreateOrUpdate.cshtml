@model LogisticCompany.Models.Courier

@{
    // Установка заголовка в зависимости от того, является ли модель пустой или нет
    ViewData["Title"] = Model != null && Model.Id != 0 ? "Изменение курьера" : "Добавление курьера";
}
<h2 class="text-center mb-4">@ViewData["Title"]</h2>

<div class="container">
    <form asp-action="@(Model != null && Model.Id != 0 ? "Edit" : "Create")" method="post" class="needs-validation" novalidate>
        <input type="hidden" asp-for="Id" />

        <div class="row mb-3">
            <label asp-for="FIO" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="FIO" class="form-control" />
                <span asp-validation-for="FIO" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="Passport" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="Passport" class="form-control" />
                <span asp-validation-for="Passport" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="BirthDate" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="BirthDate" type="datetime" class="form-control" formnovalidate />
                <span asp-validation-for="BirthDate" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="EmploymentDate" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="EmploymentDate" type="datetime" class="form-control" formnovalidate/>
                <span asp-validation-for="EmploymentDate" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="StartWorkTime" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="StartWorkTime" type="time" class="form-control" />
                <span asp-validation-for="StartWorkTime" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="EndWorkTime" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="EndWorkTime" type="time" class="form-control" />
                <span asp-validation-for="EndWorkTime" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="LivingPlace" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="LivingPlace" class="form-control" />
                <span asp-validation-for="LivingPlace" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <label asp-for="Phone" class="col-sm-2 col-form-label"></label>
            <div class="col-sm-10">
                <input asp-for="Phone" class="form-control" />
                <span asp-validation-for="Phone" class="text-danger"></span>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-10 offset-sm-2">
                <button type="submit" class="btn btn-primary">Сохранить</button>
                <a asp-action="Index" class="btn btn-secondary ms-2">Отмена</a>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const form = document.querySelector("form");

            form.addEventListener("submit", function (event) {
                let isValid = true;

                // Проверка ФИО (должно быть 3 слова)
                const fio = document.querySelector("input[name='FIO']").value.trim();
                if (fio.split(" ").length !== 3) {
                    isValid = false;
                    alert("Поле ФИО должно содержать три слова.");
                }

                // Проверка номера паспорта (должно быть 10 цифр)
                const passport = document.querySelector("input[name='Passport']").value.trim();
                if (!/^\d{10}$/.test(passport)) {
                    isValid = false;
                    alert("Поле Паспорт должно содержать 10 цифр.");
                }

                 // Проверка даты рождения (не должна быть 01.01.0001)
                const birthDate = document.querySelector("input[name='BirthDate']").value;
                if (birthDate === "01.01.0001") {
                    isValid = false;
                    alert("Поле Дата рождения не может быть 01.01.0001.");
                }

                // Проверка даты приёма на работу (не должна быть 01.01.0001)
                const employmentDate = document.querySelector("input[name='EmploymentDate']").value;
                if (employmentDate === "01.01.0001") {
                    isValid = false;
                    alert("Поле Дата приёма на работу не может быть 01.01.0001.");
                }


                // Проверка телефона (должно быть 12 символов)
                const phone = document.querySelector("input[name='Phone']").value.trim();
                if (phone.length !== 12) {
                    isValid = false;
                    alert("Поле Телефон должно содержать 12 символов.");
                }

                if (!isValid) {
                    event.preventDefault(); // Остановка отправки формы, если найдена ошибка
                }
            });
        });
    </script>